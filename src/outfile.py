# Writes outfile and makes copies of the program generated reports
# (E.g. variables included in a result which was generated by the program)
import os

from src.CONSTANTS import (ROOT_DIRECTORY)


def make_my_directory(date):
    os.chdir(ROOT_DIRECTORY + '/Archive/')
    try:
        os.mkdir(date)
    except OSError:
        print("Folder %s already exists." % date)
        pass 


def write_outfile(client_report, abandon_group_file, call_details_file, date, voice_mail_dict, report_page_rows,
                  data_page_rows, wb, data_page, report_page):
    archive_date = '/Archive/%s/%s' % (date, date)

    for client in client_report:
        report_row = report_page_rows[client.get_string_name()]
        data_row = data_page_rows[client.get_string_name()]
        report_page['F%d' % report_row] = client.get_voice_mails()
        data_page['C%d' % data_row] = client.get_total_calls()
        data_page['E%d' % data_row] = client.get_calls_answered()
        data_page['G%d' % data_row] = client.get_true_calls_lost()
        data_page['L%d' % data_row] = client.get_average_duration_time_stamp()
        data_page['N%d' % data_row] = client.get_average_wait_answered_time_stamp()
        data_page['P%d' % data_row] = client.get_average_wait_lost_time_stamp()
        data_page['X%d' % data_row] = client.get_longest_answered_time_stamp()
        (call_15sec,
         call_30sec,
         call_45sec,
         call_60sec,
         call_g60sec) = client.get_ticker()
        data_page['R%d' % data_row] = call_15sec
        data_page['S%d' % data_row] = call_30sec
        data_page['T%d' % data_row] = call_45sec
        data_page['U%d' % data_row] = call_60sec
        data_page['V%d' % data_row] = call_g60sec
        data_row += 5
        report_row += 3
    data_page['AC1'] = date[0:2] + '/' + date[2:4] + '/' + date[4:]
    wb.save('%s/Output/%s_Incoming DID Summary.xlsx' % (ROOT_DIRECTORY, date))
    make_my_directory(date)
    
    abandon_group_file.save('%s%s_Group Abandoned Calls.xlsx' % (ROOT_DIRECTORY, archive_date))
    call_details_file.save('%s%s_Call Details.xlsx' % (ROOT_DIRECTORY, archive_date))
    text_file = open('%s%svoiceMails.txt' % (ROOT_DIRECTORY, archive_date), 'w')
    for client in voice_mail_dict:
        text_file.write("Client: %s Number %s\n" % (client, voice_mail_dict[client]))
    text_file.close()
